volumes:
  db-data: {}
  um-data: {}
  um-logs: {}
  esb-vm1-audit: {}
  esb-vm1-user-home: {}
  esb-vm1-wm-home: {}
  esb-vm1-upd-mgr-home: {}
  apigw-vm1-audit: {}
  apigw-vm1-user-home: {}
  apigw-vm1-wm-home: {}
  apigw-vm1-upd-mgr-home: {}
  esdata: {}
networks:
  n1:
    external:
      false
services:
  db:
    image: ${WMUI_LAB01_POSTGRESQL_IMAGE}
    restart: always
    environment:
      - POSTGRES_USER=${WMUI_LAB01_DBSERVER_USER_NAME}
      - POSTGRES_PASSWORD=${WMUI_LAB01_DBSERVER_PASSWORD}
      - WMUI_LAB01_HOST_NAME
    networks:
      n1:
        aliases:
          - ${WMUI_LAB01_DBSERVER_HOSTNAME}
    # comment out ports, supposed to be used internally only
    #ports:
    #  - "${WMUI_LAB01_PORT_PREFIX}32:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    command: -p ${WMUI_LAB01_DBSERVER_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  adminer:
    image: adminer
    container_name: lab01-adminer
    hostname: lab01-adminer
    networks:
      - n1
    ports:
      - ${WMUI_LAB01_PORT_PREFIX}80:8080
    depends_on:
      db:
        condition: service_healthy
  um:
    image: ${WMUI_LAB01_UM_IMAGE}
    container_name: lab01-um
    hostname: lab01-um
    environment:
      - REALM_NAME=${WMUI_LAB01_UM_REALM_NAME}
      - INIT_JAVA_MEM_SIZE=256M
      - MAX_JAVA_MEM_SIZE=512M
      - MAX_DIRECT_MEM_SIZE=256M
    # comment out ports, supposed to be used internally only
    #ports:
    #  - "${WMUI_LAB01_PORT_PREFIX}99:9000"
    volumes:
      - um-data:${WMUI_LAB01_UM_DATA_MOUNT_POINT}
      - um-logs:${WMUI_LAB01_UM_LOGS_MOUNT_POINT}
    mem_reservation: 1g
    mem_limit: 1g
    networks:
      - n1
  esb:
    build:
      context: ${H_WMUI_HOME}/09.utils/container-images/ubi/vm-emulator
      args:
        - __audit_home_dir=${WMUI_LAB01_ESB_AUDIT_MOUNT_POINT}
        - __install_dir=${WMUI_LAB01_ESB_WM_HOME_MOUNT_POINT}
        - __upd_mgr_home_dir=${WMUI_LAB01_ESB_UPD_MGR_HOME_MOUNT_POINT}
        - __user_home=${WMUI_LAB01_ESB_USER_HOME_MOUNT_POINT}
    image: lab01-esb-vm-1
    container_name: lab01-esb-vm
    hostname: lab01-esb-vm
    ulimits:
      nproc: 4096
      nofile: 65536
    volumes:
      - ./config/esb-vm1/:${WMUI_LAB01_ESB_CONFIG_MOUNT_POINT}
      - ./scripts/esb-vm1/:${WMUI_LAB01_ESB_SCRIPTS_MOUNT_POINT}
      - ./config/esb-vm1/application.properties:${WMUI_LAB01_ESB_APP_PROPS_MOUNT_POINT}
      - ${H_WMUI_HOME}:${WMUI_HOME}
      - esb-vm1-audit:${WMUI_LAB01_ESB_AUDIT_MOUNT_POINT}
      - esb-vm1-upd-mgr-home:${WMUI_LAB01_ESB_UPD_MGR_HOME_MOUNT_POINT}
      - esb-vm1-user-home:${WMUI_LAB01_ESB_USER_HOME_MOUNT_POINT}
      - esb-vm1-wm-home:${WMUI_LAB01_ESB_WM_HOME_MOUNT_POINT}
      - ${H_WMUI_INSTALLER_PATH}:${WMUI_INSTALL_INSTALLER_BIN_MOUNT_POINT}
      - ${H_WMUI_UPD_MGR_PATH}:${WMUI_PATCH_UPD_MGR_BOOTSTRAP_BIN_MOUNT_POINT}
      - ${H_WMUI_ESB_PRODUCTS_IMAGE_PATH}:${WMUI_INSTALL_IMAGE_FILE}
      - ${H_WMUI_ESB_FIXES_IMAGE_PATH}:${WMUI_PATCH_FIXES_IMAGE_FILE}
      - ${H_WMUI_LAB01_PUB_SUB_MON_01_REPO_HOME}:${WMUI_LAB01_PUB_SUB_MON_01_REPO_MOUNT_POINT}
    environment:
      - SAG_IS_CONFIG_PROPERTIES=${WMUI_LAB01_ESB_APP_PROPS_MOUNT_POINT}
      # setup parameters
      - WMUI_AUDIT_BASE_DIR=${WMUI_LAB01_ESB_AUDIT_MOUNT_POINT}
      - WMUI_DEBUG_ON
      - WMUI_HOME
      - WMUI_INSTALL_IMAGE_FILE
      - WMUI_INSTALL_INSTALL_DIR=${WMUI_LAB01_ESB_WM_HOME_MOUNT_POINT}
      - WMUI_INSTALL_INSTALLER_BIN
      - WMUI_INSTALL_INSTALLER_BIN_MOUNT_POINT
      - WMUI_LAB01_PORT_PREFIX
      - WMUI_ONLINE_MODE
      - WMUI_PATCH_AVAILABLE
      - WMUI_PATCH_FIXES_IMAGE_FILE
      - WMUI_PATCH_UPD_MGR_BOOTSTRAP_BIN
      - WMUI_PATCH_UPD_MGR_BOOTSTRAP_BIN_MOUNT_POINT
      - WMUI_SDC_ONLINE_MODE
      - WMUI_UPD_MGR_HOME=${WMUI_LAB01_ESB_UPD_MGR_HOME_MOUNT_POINT}
      - WMUI_WORK_DIR
      # database parameters
      - WMUI_LAB01_POSTGRESQL_IMAGE
      - WMUI_LAB01_DBSERVER_HOSTNAME
      - WMUI_LAB01_DBSERVER_DATABASE_NAME
      - WMUI_LAB01_DBSERVER_USER_NAME
      - WMUI_LAB01_DBSERVER_PASSWORD
      - WMUI_LAB01_DBSERVER_PORT
      # CDS setup variables
      - WMUI_WMSCRIPT_CDS_DB_PASSWORD=${WMUI_LAB01_DBSERVER_PASSWORD}
      - WMUI_WMSCRIPT_CDS_DB_USER=${WMUI_LAB01_DBSERVER_USER_NAME}
      - WMUI_WMSCRIPT_CDS_CONN_STRING
      # E2EM variables
      - SW_AGENT_COLLECTOR_ESTABLISH_CLOUD_COMMUNICATION
      - SW_AGENT_EXTERNAL_ESTABLISH_COMMUNICATION
      - SW_AGENT_EXTERNAL_TARGET
      - SW_AGENT_EXTERNAL_TARGET_NAME
      - SW_AGENT_OTEL_ENDPOINT
      - SW_AGENT_OTEL_HEADERS
      - SW_AGENT_EXT_SYSTEM_USER
      - SW_AGENT_EXT_SYSTEM_PASSWORD
      - SW_AGENT_EXTERNAL_SUPPORT_LONG_ID
      - WMUI_LAB01_HOST_NAME
      - JAVA_MAX_MEM=384M
      - SW_LOGGING_LEVEL
      ## Application level
      - WMUI_LAB01_PUB_SUB_MON_01_REPO_MOUNT_POINT
      - WMUI_LAB01_ESB_COPY_PUB_SUB_MON_PACKAGES
    ports:
      - "${WMUI_LAB01_PORT_PREFIX}53:5543"
      - "${WMUI_LAB01_PORT_PREFIX}55:5555"
    networks:
      - n1
    depends_on:
      um:
        condition: service_healthy
    healthcheck:
      interval: 10s
      retries: 200
      test: curl -u "Administrator:manage" --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5555/health
    entrypoint: ${WMUI_LAB01_ESB_SCRIPTS_MOUNT_POINT}/containerEntrypoint.sh
  apigateway:
    build:
      context: ${H_WMUI_HOME}/09.utils/container-images/ubi/vm-emulator
      args:
        - __audit_home_dir=${WMUI_LAB01_APIGW_AUDIT_MOUNT_POINT}
        - __install_dir=${WMUI_LAB01_APIGW_WM_HOME_MOUNT_POINT}
        - __upd_mgr_home_dir=${WMUI_LAB01_APIGW_UPD_MGR_HOME_MOUNT_POINT}
        - __user_home=${WMUI_LAB01_APIGW_USER_HOME_MOUNT_POINT}
    image: lab01-api-gw-vm-1
    container_name: lab01-api-gw-vm
    hostname: lab01-api-gw-vm
    ulimits:
      nproc: 4096
      nofile: 65536
    volumes:
      - ./config/api-gw-vm1/:${WMUI_LAB01_APIGW_CONFIG_MOUNT_POINT}
      - ./scripts/api-gw-vm1/:${WMUI_LAB01_APIGW_SCRIPTS_MOUNT_POINT}
      - ./config/api-gw-vm1/application.properties:${WMUI_LAB01_APIGW_APP_PROPS_MOUNT_POINT}
      - ${H_WMUI_HOME}:${WMUI_HOME}
      - apigw-vm1-audit:${WMUI_LAB01_APIGW_AUDIT_MOUNT_POINT}
      - apigw-vm1-upd-mgr-home:${WMUI_LAB01_APIGW_UPD_MGR_HOME_MOUNT_POINT}
      - apigw-vm1-user-home:${WMUI_LAB01_APIGW_USER_HOME_MOUNT_POINT}
      - apigw-vm1-wm-home:${WMUI_LAB01_APIGW_WM_HOME_MOUNT_POINT}
      - ${H_WMUI_INSTALLER_PATH}:${WMUI_INSTALL_INSTALLER_BIN_MOUNT_POINT}
      - ${H_WMUI_UPD_MGR_PATH}:${WMUI_PATCH_UPD_MGR_BOOTSTRAP_BIN_MOUNT_POINT}
      - ${H_WMUI_APIGW_PRODUCTS_IMAGE_PATH}:${WMUI_INSTALL_IMAGE_FILE}
      - ${H_WMUI_APIGW_FIXES_IMAGE_PATH}:${WMUI_PATCH_FIXES_IMAGE_FILE}
    environment:
      - SAG_IS_CONFIG_PROPERTIES=${WMUI_LAB01_APIGW_APP_PROPS_MOUNT_POINT}
      # setup parameters
      - WMUI_AUDIT_BASE_DIR=${WMUI_LAB01_APIGW_AUDIT_MOUNT_POINT}
      - WMUI_DEBUG_ON
      - WMUI_HOME
      - WMUI_INSTALL_IMAGE_FILE
      - WMUI_INSTALL_INSTALL_DIR=${WMUI_LAB01_APIGW_WM_HOME_MOUNT_POINT}
      - WMUI_INSTALL_INSTALLER_BIN
      - WMUI_INSTALL_INSTALLER_BIN_MOUNT_POINT
      - WMUI_LAB01_PORT_PREFIX
      - WMUI_ONLINE_MODE
      - WMUI_PATCH_AVAILABLE
      - WMUI_PATCH_FIXES_IMAGE_FILE
      - WMUI_PATCH_UPD_MGR_BOOTSTRAP_BIN
      - WMUI_PATCH_UPD_MGR_BOOTSTRAP_BIN_MOUNT_POINT
      - WMUI_SDC_ONLINE_MODE
      - WMUI_UPD_MGR_HOME=${WMUI_LAB01_APIGW_UPD_MGR_HOME_MOUNT_POINT}
      - WMUI_WORK_DIR
      # database parameters
      - WMUI_LAB01_POSTGRESQL_IMAGE
      - WMUI_LAB01_DBSERVER_HOSTNAME
      - WMUI_LAB01_DBSERVER_DATABASE_NAME
      - WMUI_LAB01_DBSERVER_USER_NAME
      - WMUI_LAB01_DBSERVER_PASSWORD
      - WMUI_LAB01_DBSERVER_PORT
      # CDS setup variables
      - WMUI_WMSCRIPT_CDS_DB_PASSWORD=${WMUI_LAB01_DBSERVER_PASSWORD}
      - WMUI_WMSCRIPT_CDS_DB_USER=${WMUI_LAB01_DBSERVER_USER_NAME}
      - WMUI_WMSCRIPT_CDS_CONN_STRING
      # Elasticsearch configuration
      - apigw_elasticsearch_hosts=core-elasticsearch:9200
      - apigw_elasticsearch_https_enabled=false
      - apigw_elasticsearch_http_username=${WMUI_LAB01_ELASTIC_USERNAME}
      - apigw_elasticsearch_http_password=${WMUI_LAB01_ELASTIC_PASSWORD}
      # external kibana
      - apigw_kibana_dashboardInstance=${WMUI_LAB01_APIGW_KIBANA_BASE_URL}
      # E2EM variables
      - SW_AGENT_COLLECTOR_ESTABLISH_CLOUD_COMMUNICATION
      - SW_AGENT_EXTERNAL_ESTABLISH_COMMUNICATION
      - SW_AGENT_EXTERNAL_TARGET
      - SW_AGENT_EXTERNAL_TARGET_NAME
      - SW_AGENT_OTEL_ENDPOINT
      - SW_AGENT_OTEL_HEADERS
      - SW_AGENT_EXT_SYSTEM_USER
      - SW_AGENT_EXT_SYSTEM_PASSWORD
      - SW_AGENT_EXTERNAL_SUPPORT_LONG_ID
      - WMUI_LAB01_HOST_NAME
      - JAVA_MAX_MEM=512M
      - WMUI_LAB01_APIGW_ENABLE_E2EM_AGENT
      - SW_LOGGING_LEVEL
    ports:
      - "${WMUI_LAB01_PORT_PREFIX}73:9073"
      - "${WMUI_LAB01_PORT_PREFIX}72:9072"
      - "${WMUI_LAB01_PORT_PREFIX}57:5555"
    networks:
      - n1
    depends_on:
      db:
        condition: service_healthy
      core-elasticsearch:
        condition: service_healthy
      esb:
        condition: service_healthy
    entrypoint: ${WMUI_LAB01_APIGW_SCRIPTS_MOUNT_POINT}/containerEntrypoint.sh
    healthcheck:
      interval: 10s
      retries: 200
      test: curl -u "Administrator:manage" --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5555/rest/apigateway/health
  core-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${WMUI_LAB01_ELK_VERSION}
    volumes:
      - esdata:/usr/share/elasticsearch/data
    container_name: lab01-es
    hostname: lab01-es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.cors.allow-headers=X-Requested-With,Content-Type,Content-Length,Authorization
      - http.cors.enabled=true
      - http.cors.allow-origin=/.*/
      - ELASTIC_USERNAME=${WMUI_LAB01_ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${WMUI_LAB01_ELASTIC_PASSWORD}
    ports:
      - ${WMUI_LAB01_PORT_PREFIX}20:9200
    networks:
      - n1
    mem_reservation: 1g
    mem_limit: 1g
    #cpus: 1
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
  elasticvue:
    image: cars10/elasticvue
    ports:
      - "${WMUI_LAB01_PORT_PREFIX}81:8080"
    container_name: lab01-e-vue
    hostname: lab01-e-vue
    networks:
      - n1
    depends_on:
      core-elasticsearch:
        condition: service_healthy
    mem_reservation: 100m
    mem_limit: 500m
    #cpus: 1
  core-kibana:
    image: docker.elastic.co/kibana/kibana:${WMUI_LAB01_ELK_VERSION}
    depends_on:
      apigateway:
        condition: service_healthy
    container_name: lab01-kib
    hostname: lab01-kib
    environment:
      - ELASTICSEARCH_URL=http://core-elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://core-elasticsearch:9200
      - KIBANA_EXTERNAL_HOSTNAME=${WMUI_LAB01_APIGW_KIBANA_BASE_URL}
      - ELASTICSEARCH_USERNAME=${WMUI_LAB01_ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${WMUI_LAB01_ELASTIC_PASSWORD}
      - SERVER_BASEPATH=/apigatewayui/dashboardproxy
      - CONSOLE_ENABLED=false
    ports:
      - ${WMUI_LAB01_PORT_PREFIX}56:5601
    networks:
      - n1
    healthcheck:
      interval: 10s
      retries: 400
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
    mem_reservation: 200m
    mem_limit: 1g
    #cpus: 1
  instana-agent:
    image: icr.io/instana/agent
    container_name: instana-agent
    privileged: true
    networks:
      - n1
    pid: host
    volumes:
      - /run/user/1000/:/var/run
      - ./configuration-custom.yaml:/opt/instana/agent/etc/instana/configuration-custom.yaml
      - /dev:/dev:ro
      - /sys:/sys:ro
      - /var/log:/var/log:ro
    environment:
      - INSTANA_AGENT_ENDPOINT=${INSTANA_AGENT_ENDPOINT}
      - INSTANA_AGENT_ENDPOINT_PORT=${INSTANA_AGENT_ENDPOINT_PORT}
      - INSTANA_AGENT_KEY=${INSTANA_AGENT_KEY}
      - INSTANA_DOWNLOAD_KEY=${INSTANA_DOWNLOAD_KEY}
